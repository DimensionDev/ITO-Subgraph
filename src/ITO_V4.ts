// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClaimSuccess extends ethereum.Event {
  get params(): ClaimSuccess__Params {
    return new ClaimSuccess__Params(this);
  }
}

export class ClaimSuccess__Params {
  _event: ClaimSuccess;

  constructor(event: ClaimSuccess) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get claimer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get to_value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get token_address(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class DestructSuccess extends ethereum.Event {
  get params(): DestructSuccess__Params {
    return new DestructSuccess__Params(this);
  }
}

export class DestructSuccess__Params {
  _event: DestructSuccess;

  constructor(event: DestructSuccess) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get token_address(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get remaining_balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get exchanged_values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class FillSuccess extends ethereum.Event {
  get params(): FillSuccess__Params {
    return new FillSuccess__Params(this);
  }
}

export class FillSuccess__Params {
  _event: FillSuccess;

  constructor(event: FillSuccess) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get total(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get creation_time(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get token_address(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get message(): string {
    return this._event.parameters[5].value.toString();
  }

  get start(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get end(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get exchange_addrs(): Array<Address> {
    return this._event.parameters[8].value.toAddressArray();
  }

  get ratios(): Array<BigInt> {
    return this._event.parameters[9].value.toBigIntArray();
  }

  get qualification(): Address {
    return this._event.parameters[10].value.toAddress();
  }

  get limit(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class SwapSuccess extends ethereum.Event {
  get params(): SwapSuccess__Params {
    return new SwapSuccess__Params(this);
  }
}

export class SwapSuccess__Params {
  _event: SwapSuccess;

  constructor(event: SwapSuccess) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get swapper(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from_address(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to_address(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get from_value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get to_value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get input_total(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class WithdrawSuccess extends ethereum.Event {
  get params(): WithdrawSuccess__Params {
    return new WithdrawSuccess__Params(this);
  }
}

export class WithdrawSuccess__Params {
  _event: WithdrawSuccess;

  constructor(event: WithdrawSuccess) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get token_address(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get withdraw_balance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ITO_V4__check_availabilityResult {
  value0: Array<Address>;
  value1: BigInt;
  value2: boolean;
  value3: boolean;
  value4: boolean;
  value5: BigInt;
  value6: BigInt;
  value7: Array<BigInt>;

  constructor(
    value0: Array<Address>,
    value1: BigInt,
    value2: boolean,
    value3: boolean,
    value4: boolean,
    value5: BigInt,
    value6: BigInt,
    value7: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigIntArray(this.value7));
    return map;
  }
}

export class ITO_V4 extends ethereum.SmartContract {
  static bind(address: Address): ITO_V4 {
    return new ITO_V4("ITO_V4", address);
  }

  base_time(): BigInt {
    let result = super.call("base_time", "base_time():(uint64)", []);

    return result[0].toBigInt();
  }

  try_base_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("base_time", "base_time():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  check_availability(id: Bytes): ITO_V4__check_availabilityResult {
    let result = super.call(
      "check_availability",
      "check_availability(bytes32):(address[],uint256,bool,bool,bool,uint256,uint256,uint128[])",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return new ITO_V4__check_availabilityResult(
      result[0].toAddressArray(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigIntArray()
    );
  }

  try_check_availability(
    id: Bytes
  ): ethereum.CallResult<ITO_V4__check_availabilityResult> {
    let result = super.tryCall(
      "check_availability",
      "check_availability(bytes32):(address[],uint256,bool,bool,bool,uint256,uint256,uint128[])",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ITO_V4__check_availabilityResult(
        value[0].toAddressArray(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigIntArray()
      )
    );
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get ito_ids(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class DestructCall extends ethereum.Call {
  get inputs(): DestructCall__Inputs {
    return new DestructCall__Inputs(this);
  }

  get outputs(): DestructCall__Outputs {
    return new DestructCall__Outputs(this);
  }
}

export class DestructCall__Inputs {
  _call: DestructCall;

  constructor(call: DestructCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DestructCall__Outputs {
  _call: DestructCall;

  constructor(call: DestructCall) {
    this._call = call;
  }
}

export class Fill_poolCall extends ethereum.Call {
  get inputs(): Fill_poolCall__Inputs {
    return new Fill_poolCall__Inputs(this);
  }

  get outputs(): Fill_poolCall__Outputs {
    return new Fill_poolCall__Outputs(this);
  }
}

export class Fill_poolCall__Inputs {
  _call: Fill_poolCall;

  constructor(call: Fill_poolCall) {
    this._call = call;
  }

  get _hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _start(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _end(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _message(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _exchange_addrs(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _ratios(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get _unlock_time(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _token_addr(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _total_tokens(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _limit(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _qualification(): Address {
    return this._call.inputValues[10].value.toAddress();
  }
}

export class Fill_poolCall__Outputs {
  _call: Fill_poolCall;

  constructor(call: Fill_poolCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _base_time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetUnlockTimeCall extends ethereum.Call {
  get inputs(): SetUnlockTimeCall__Inputs {
    return new SetUnlockTimeCall__Inputs(this);
  }

  get outputs(): SetUnlockTimeCall__Outputs {
    return new SetUnlockTimeCall__Outputs(this);
  }
}

export class SetUnlockTimeCall__Inputs {
  _call: SetUnlockTimeCall;

  constructor(call: SetUnlockTimeCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _unlock_time(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetUnlockTimeCall__Outputs {
  _call: SetUnlockTimeCall;

  constructor(call: SetUnlockTimeCall) {
    this._call = call;
  }
}

export class SwapCall extends ethereum.Call {
  get inputs(): SwapCall__Inputs {
    return new SwapCall__Inputs(this);
  }

  get outputs(): SwapCall__Outputs {
    return new SwapCall__Outputs(this);
  }
}

export class SwapCall__Inputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get verification(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get exchange_addr_i(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get input_total(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }
}

export class SwapCall__Outputs {
  _call: SwapCall;

  constructor(call: SwapCall) {
    this._call = call;
  }

  get swapped(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get addr_i(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
